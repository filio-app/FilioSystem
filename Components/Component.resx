<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="BunifuToolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="EP.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>151, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="EP.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEAIACICQAAFgAAACgAAAAYAAAAMAAAAAEAIAAAAAAAAAkAAIy4AACMuAAAAAAAAAAA
        AAAAAAABAAAAAQAAAAEAAAABAAAAAQAAAAGfUO8Cn1DvAp5Q7QOeUO0Enk/sBZ5P7AWdT+0FnU/sBZ5P
        7ASeT+0Dn1DuAp9Q7gIAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABoFDwAqBR
        8QKfUO8Ev1//A55Q7QeeUOwJnk/sDJ5P7A2dT+0OnU/sDJ5P7AqeT+0HNwAuA55P7AOdT+sCAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAGfUO8Cn1DwAqBR8gSfUO8Ink/tD51Q7VOdUOyYnU/s1J1P
        7NidT+zdnU/s251P7KedT+xank7sDp1O6wecT+oDm1DqA5tQ6gIAAAABAAAAAQAAAAEAAAABAAAAAZ9Q
        7wKfUO8CnlDuBZ9Q8AidT+xdnU/rvp1P7PqdT+zznU/s4Z1P7N2dT+zfnU/s451P7POdT+z6nU/svJ1P
        7EebUOoIm1DpBptQ6gObUOsCAAAAAQAAAAEAAAABoFHxAqBR8QKeUO4Fnk/tCJ1P7G+dT+zxnU/s851P
        7M6dT+yVnE/rRZxQ6zmcUOs5nE/rRZ1P7JmdT+zLnU/s751P7O2cT+yGm1DqC5tQ6wabUOsDAAAAAQAA
        AAEAAAABoVHyAqJS9ASgUfEInU/sb51P7POdT+ztnU/shZtQ6wucUOsEnFDsAp1Q7ACdUOwAnVDsAZ5Q
        7QKfUO4Dnk7sbJ1P7OOdT+z7nE/shptQ6wicUOwDnU/tAQAAAAGfUO8BoFDwAqBR8QidT+1jnU/s8Z1P
        7OyeT+xmnU/sAJxQ6wOcUOwCnVDsCp1Q7CSdUOwknVDsCZ5Q7QGeUO4Bnk/tAJ5P7GedT+zinU/s7Z1P
        7U2dT+0InlDuAp5Q7wGfUO8BWjudA51P7RadT+zNnU/s851P7ISdT+wAnU/sAAAAAAKdUOwBnU/sKp1P
        7KedT+yonU/rK51Q7AAAAAACnU/sAJ1P7ACeTuxynU/s751P7M2dT+0VbT2wA59Q7gGeUO0CnlDtB51Q
        7VOdT+z3nU/syZtQ6wucUOsDAAAAAQAAAAGeT+wAnU/rJZ1P7KKdT+yknE/rJpxP6wEAAAABAAAAAZtQ
        6wSaUOsPnU/sy51P7PedUO1SnlDtB55Q7QKdUO0DnVDtCZ1P7JadT+zwnk/siJxQ6wSbUOsCAAAAAQAA
        AAGeUO0CnlDtCZ1Q7B+cUOslm1DrFZtQ6wMAAAABAAAAAZtQ6wObUOwAnk/tfZ1P7O6dT+yKnVDtCZ1Q
        7QOeT+wFnk/sC51P7NOdT+zgnE/rRZxP6wEAAAABAAAAAQAAAAGcUOsCnFDrEZxP6yKcT+shm1DrEJtQ
        6wMAAAABAAAAAQAAAAGbUOwCnFDsOJ1P7N+dT+zVnU/sC51P7AWdT+wFnU/sDZ1P7NWdT+zcm1DrO5tQ
        6wEAAAABAAAAAQAAAAGcT+sAnE/qJZ1P65edT+uXnE/rJJxP6wAAAAABAAAAAQAAAAGcUOwBnFDsLZ1P
        7N6dT+zcnU/sDp1P7AWdT+wFnU/sDJ1P7NOdT+zbm1DrOJtQ6wEAAAABAAAAAQAAAAGdTusAnU7rMZ1P
        7MidT+zInU7rMZxO6wAAAAABAAAAAQAAAAGcUOwBnFDsKZ1P7N+dT+zenU/sDp1P7AadT+wEnU/sCZxP
        7JOdT+zhnFDrPJtQ6wEAAAABAAAAAQAAAAGdTusAnU7rNJ1P7MedT+zHnU7rNJ1O6wAAAAABAAAAAQAA
        AAGcT+sBnE/rU51P7OOdT+zenU/sDZ1P7AWdT+wDnU/sB51P7ImcT+zvnk/tfZtQ6wSbUOsCAAAAAQAA
        AAGdTusAnU7rNJ1P7MWdT+zFnU7qNJ1O6wAAAAABAAAAAZxQ7AOcUOwEnk/sg51P7OqdT+ysnU/rCp1P
        6wSdUOwCnVDsBJ1P7EKdT+z3nU/syppQ6wubUOsDAAAAAQAAAAGdT+sAnU/rMp1P7MCdT+zAnU7rMp1P
        7AAAAAACnlDtAp1Q7QWcUOwLnU/sxZ1P7O2cT+trnFDrBpxQ6wOdUOwCnU/sBJxP6widT+y9nU/s751P
        7IOcT+wAnVDsAAAAAAKdUOwAnU/rLp1P7LWdT+y1nU/rL55Q7QCeUO4Bn1DuA59Q7gedT+x1nU/s7J1P
        7MOcT+wnm1DrA5tQ6wIAAAABnE7rA5xO6wWdTuxAnU/s451P7OmeT+xlnVDsAJxR6wOcUewCnVHsC51Q
        7CSdUOwknVDsCp5Q7QKfUO8Dn1DvBp1P7GadT+zjnU/s6p1P7GSdUO0GnFDsApxQ7AEAAAABnU7rAp1P
        6wOdTuoFnk/sbp1P7POdT+zpnU/shZtR6wucUOsEnVDrAp1Q7ACdUOwAnVDtAZ5Q7gKfUO8FnU/sgJ1P
        7OadT+zonU/sfptQ6wtyRLYDnVDuAgAAAAEAAAABAAAAAZ1P6wKcTukEnE7oB55P7G6dT+zknU/s751P
        7NCdTuyXnE/qUJxQ7CacUOwqnFDsN55P7H+dT+zBnU/s751P7OydT+xtm1DrCptQ6wacUOwDnVDuAgAA
        AAEAAAABAAAAAZ5P7QKdTuoCnE7pBJ1O6gWdT+xBnU7svp1P7PqdT+zynU/s5Z1P7N6dT+zenU/s4Z1P
        7OmdT+ztnU/ssp1P7FyeUO4InVDsBZxQ7AOcUOwCAAAAAQAAAAEAAAABAAAAAQAAAAGeT+0CnU/rAp5P
        7AKdTusGnU7sE51P7EmcT+twnU/sqJ1P7NydT+zdnU/s3Z1P7JadUO1Qnk/tDp9Q7gigUvAEn1HuAp5Q
        7QIAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAZ5P7AGgUO4Bo1PyAp9R7wWcT+wHnU/sCp1P
        7A2dT+wOnU/sDJ5Q7AmeUO0Hr1r/A59Q7gSgUe8Cn1HvAgAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAGgUO4BoFHvAZ5Q7QKcT+wDnU/sBJ1P7AWdT+wFnU/sBZ5P7ASeUO0Dn1DuAp9Q
        7wIAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA=
</value>
  </data>
</root>